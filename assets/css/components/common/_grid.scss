.grid {
	@include flex(flex);
	@include flex_wrap(wrap);
}

.grid--reverse {
	@include flex_direction(row-reverse);
}

.grid__col--v-center {
	@include flex_align_self(center);
}

.grid__col--right {
	margin-left: auto;
}

.grid__col--left {
	margin-right: auto;
}

@for $i from 1 through $grid-cols {
	.grid:not(.grid--reverse) {
		.grid__col--#{$i} {
			width: calc_grid_cols($i);

			&:not(:nth-of-type(#{($grid-cols / $i)}n)):not(:last-child) {
				margin-right: $grid-spacing-percent;
			}
		}
	}

	.grid--reverse {
		.grid__col--#{$i} {
			width: calc_grid_cols($i);

			&:not(:nth-last-of-type(#{($grid-cols / $i)}n)):not(:last-child) {
				margin-left: $grid-spacing-percent;
			}
		}
	}
}

.grid--dev {
	& + & {
		margin-top: 80px;
	}

	.grid__col {
		background: #e2e2e2;
	}
}

//---- Responsive ----//
@media screen and (max-width: map-get($breakpoints, tablet-1)) {
	.grid.grid--tb1-2:not(.grid--reverse) {
		@include flex_justify(center);
		
		> .grid__col.grid__col {
			width: calc_grid_cols(6);
			margin-right: 0;

			&:nth-child(2n) {
				margin-left: auto;
			}

			&:nth-child(1n+3) {
				margin-top: 35px;
			}
		}
	}
}

@media screen and (min-width: map-get($breakpoints, tablet-3) + 1) {
	@for $i from 1 through $grid-cols {
		.grid:not(.grid--reverse) {
			.grid__col--#{$i} {
				&:nth-of-type(1n+#{12 / $i + 1}) {
					margin-top: #{$grid-spacing-px}px;
				}
			}
		}
	
		.grid--reverse {
			.grid__col--#{$i} {
				&:nth-last-of-type(1n+#{12 / $i + 1}) {
					margin-top: #{$grid-spacing-px}px;
				}
			}
		}
	}
}

@media screen and (max-width: map-get($breakpoints, tablet-3)) {
	@for $i from 1 through $grid-cols {
		.grid:not(.grid--reverse) {
			.grid__col--#{$i} {
				&:nth-of-type(1n+#{12 / $i + 1}) {
					margin-top: 30px;
				}
			}
		}
	
		.grid--reverse {
			.grid__col--#{$i} {
				&:nth-last-of-type(1n+#{12 / $i + 1}) {
					margin-top: 30px;
				}
			}
		}
	}
}

@media screen and (max-width: map-get($breakpoints, mobile-1)) {
	.grid.grid--m-1:not(.grid--reverse) {
		> .grid__col.grid__col {
			width: 100%;
			margin-right: 0;
			margin-left: 0;

			&:nth-child(1n+2) {
				margin-top: 30px;
			}
		}
	}
}

@media screen and (max-width: map-get($breakpoints, mobile-2)) {
	.grid.grid--m2-1:not(.grid--reverse),
	.grid.grid--m2-1.grid--reverse {
		> .grid__col.grid__col {
			width: 100%;
			margin-right: 0;
			margin-left: 0;

			&:nth-child(1n+2) {
				margin-top: 30px;
			}
		}
	}
}